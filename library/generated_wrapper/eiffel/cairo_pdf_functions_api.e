note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class CAIRO_PDF_FUNCTIONS_API


feature -- Access

	cairo_pdf_surface_create (filename: POINTER; width_in_points: REAL_64; height_in_points: REAL_64): POINTER
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				return cairo_pdf_surface_create ((char const*)$filename, (double)$width_in_points, (double)$height_in_points);
			]"
		end

	cairo_pdf_surface_create_for_stream (write_func: POINTER; closure: POINTER; width_in_points: REAL_64; height_in_points: REAL_64): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_pdf_surface_create_for_stream (write_func, closure, width_in_points, height_in_points) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_pdf_surface_restrict_to_version (surface: CAIRO_SURFACE_STRUCT_API; version: INTEGER) 
		do
			c_cairo_pdf_surface_restrict_to_version (surface.item, version)
		ensure
			instance_free: class
		end

	cairo_pdf_get_versions (versions: POINTER; num_versions: TYPED_POINTER [INTEGER]) 
		do
			c_cairo_pdf_get_versions (versions, num_versions)
		ensure
			instance_free: class
		end

	cairo_pdf_version_to_string (version: INTEGER): POINTER 
		do
			Result := c_cairo_pdf_version_to_string (version)
		ensure
			instance_free: class
		end

	cairo_pdf_surface_set_size (surface: CAIRO_SURFACE_STRUCT_API; width_in_points: REAL_64; height_in_points: REAL_64) 
		do
			c_cairo_pdf_surface_set_size (surface.item, width_in_points, height_in_points)
		ensure
			instance_free: class
		end

	cairo_pdf_surface_add_outline (surface: CAIRO_SURFACE_STRUCT_API; parent_id: INTEGER; utf8: STRING_8; link_attribs: STRING_8; flags: INTEGER): INTEGER 
		local
			utf8_c_string: C_STRING
			link_attribs_c_string: C_STRING
		do
			create utf8_c_string.make (utf8)
			create link_attribs_c_string.make (link_attribs)
			Result := c_cairo_pdf_surface_add_outline (surface.item, parent_id, utf8_c_string.item, link_attribs_c_string.item, flags)
		ensure
			instance_free: class
		end

	cairo_pdf_surface_set_metadata (surface: CAIRO_SURFACE_STRUCT_API; metadata: INTEGER; utf8: STRING_8) 
		local
			utf8_c_string: C_STRING
		do
			create utf8_c_string.make (utf8)
			c_cairo_pdf_surface_set_metadata (surface.item, metadata, utf8_c_string.item)
		ensure
			instance_free: class
		end

	cairo_pdf_surface_set_page_label (surface: CAIRO_SURFACE_STRUCT_API; utf8: STRING_8) 
		local
			utf8_c_string: C_STRING
		do
			create utf8_c_string.make (utf8)
			c_cairo_pdf_surface_set_page_label (surface.item, utf8_c_string.item)
		ensure
			instance_free: class
		end

	cairo_pdf_surface_set_thumbnail_size (surface: CAIRO_SURFACE_STRUCT_API; width: INTEGER; height: INTEGER) 
		do
			c_cairo_pdf_surface_set_thumbnail_size (surface.item, width, height)
		ensure
			instance_free: class
		end

feature -- Externals

	c_cairo_pdf_surface_create_for_stream (write_func: POINTER; closure: POINTER; width_in_points: REAL_64; height_in_points: REAL_64): POINTER
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				return cairo_pdf_surface_create_for_stream ((cairo_write_func_t)$write_func, (void*)$closure, (double)$width_in_points, (double)$height_in_points);
			]"
		end

	c_cairo_pdf_surface_restrict_to_version (surface: POINTER; version: INTEGER)
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				cairo_pdf_surface_restrict_to_version ((cairo_surface_t*)$surface, (cairo_pdf_version_t)$version);
			]"
		end

	c_cairo_pdf_get_versions (versions: POINTER; num_versions: TYPED_POINTER [INTEGER])
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				cairo_pdf_get_versions ((cairo_pdf_version_t const**)$versions, (int*)$num_versions);
			]"
		end

	c_cairo_pdf_version_to_string (version: INTEGER): POINTER
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				return cairo_pdf_version_to_string ((cairo_pdf_version_t)$version);
			]"
		end

	c_cairo_pdf_surface_set_size (surface: POINTER; width_in_points: REAL_64; height_in_points: REAL_64)
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				cairo_pdf_surface_set_size ((cairo_surface_t*)$surface, (double)$width_in_points, (double)$height_in_points);
			]"
		end

	c_cairo_pdf_surface_add_outline (surface: POINTER; parent_id: INTEGER; utf8: POINTER; link_attribs: POINTER; flags: INTEGER): INTEGER
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				return cairo_pdf_surface_add_outline ((cairo_surface_t*)$surface, (int)$parent_id, (char const*)$utf8, (char const*)$link_attribs, (cairo_pdf_outline_flags_t)$flags);
			]"
		end

	c_cairo_pdf_surface_set_metadata (surface: POINTER; metadata: INTEGER; utf8: POINTER)
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				cairo_pdf_surface_set_metadata ((cairo_surface_t*)$surface, (cairo_pdf_metadata_t)$metadata, (char const*)$utf8);
			]"
		end

	c_cairo_pdf_surface_set_page_label (surface: POINTER; utf8: POINTER)
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				cairo_pdf_surface_set_page_label ((cairo_surface_t*)$surface, (char const*)$utf8);
			]"
		end

	c_cairo_pdf_surface_set_thumbnail_size (surface: POINTER; width: INTEGER; height: INTEGER)
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				cairo_pdf_surface_set_thumbnail_size ((cairo_surface_t*)$surface, (int)$width, (int)$height);
			]"
		end

feature -- Externals Address

end
