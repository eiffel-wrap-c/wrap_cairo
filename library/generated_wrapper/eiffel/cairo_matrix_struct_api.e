note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class CAIRO_MATRIX_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	xx: REAL_64
			-- Access member `xx`
		require
			exists: exists
		do
			Result := c_xx (item)
		ensure
			result_correct: Result = c_xx (item)
		end

	set_xx (a_value: REAL_64) 
			-- Change the value of member `xx` to `a_value`.
		require
			exists: exists
		do
			set_c_xx (item, a_value)
		ensure
			xx_set: a_value = xx
		end

	yx: REAL_64
			-- Access member `yx`
		require
			exists: exists
		do
			Result := c_yx (item)
		ensure
			result_correct: Result = c_yx (item)
		end

	set_yx (a_value: REAL_64) 
			-- Change the value of member `yx` to `a_value`.
		require
			exists: exists
		do
			set_c_yx (item, a_value)
		ensure
			yx_set: a_value = yx
		end

	xy: REAL_64
			-- Access member `xy`
		require
			exists: exists
		do
			Result := c_xy (item)
		ensure
			result_correct: Result = c_xy (item)
		end

	set_xy (a_value: REAL_64) 
			-- Change the value of member `xy` to `a_value`.
		require
			exists: exists
		do
			set_c_xy (item, a_value)
		ensure
			xy_set: a_value = xy
		end

	yy: REAL_64
			-- Access member `yy`
		require
			exists: exists
		do
			Result := c_yy (item)
		ensure
			result_correct: Result = c_yy (item)
		end

	set_yy (a_value: REAL_64) 
			-- Change the value of member `yy` to `a_value`.
		require
			exists: exists
		do
			set_c_yy (item, a_value)
		ensure
			yy_set: a_value = yy
		end

	x0: REAL_64
			-- Access member `x0`
		require
			exists: exists
		do
			Result := c_x0 (item)
		ensure
			result_correct: Result = c_x0 (item)
		end

	set_x0 (a_value: REAL_64) 
			-- Change the value of member `x0` to `a_value`.
		require
			exists: exists
		do
			set_c_x0 (item, a_value)
		ensure
			x0_set: a_value = x0
		end

	y0: REAL_64
			-- Access member `y0`
		require
			exists: exists
		do
			Result := c_y0 (item)
		ensure
			result_correct: Result = c_y0 (item)
		end

	set_y0 (a_value: REAL_64) 
			-- Change the value of member `y0` to `a_value`.
		require
			exists: exists
		do
			set_c_y0 (item, a_value)
		ensure
			y0_set: a_value = y0
		end

feature {NONE} -- Implementation wrapper for struct struct _cairo_matrix

	sizeof_external: INTEGER 
		external
			"C inline use <cairo.h>"
		alias
			"sizeof(struct _cairo_matrix)"
		end

	c_xx (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->xx
			]"
		end

	set_c_xx (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->xx =  (double)$a_value
			]"
		ensure
			xx_set: a_value = c_xx (an_item)
		end

	c_yx (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->yx
			]"
		end

	set_c_yx (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->yx =  (double)$a_value
			]"
		ensure
			yx_set: a_value = c_yx (an_item)
		end

	c_xy (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->xy
			]"
		end

	set_c_xy (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->xy =  (double)$a_value
			]"
		ensure
			xy_set: a_value = c_xy (an_item)
		end

	c_yy (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->yy
			]"
		end

	set_c_yy (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->yy =  (double)$a_value
			]"
		ensure
			yy_set: a_value = c_yy (an_item)
		end

	c_x0 (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->x0
			]"
		end

	set_c_x0 (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->x0 =  (double)$a_value
			]"
		ensure
			x0_set: a_value = c_x0 (an_item)
		end

	c_y0 (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->y0
			]"
		end

	set_c_y0 (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <cairo.h>"
		alias
			"[
				((struct _cairo_matrix*)$an_item)->y0 =  (double)$a_value
			]"
		ensure
			y0_set: a_value = c_y0 (an_item)
		end

end
