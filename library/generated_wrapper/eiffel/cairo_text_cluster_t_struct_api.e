note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class CAIRO_TEXT_CLUSTER_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	num_bytes: INTEGER
			-- Access member `num_bytes`
		require
			exists: exists
		do
			Result := c_num_bytes (item)
		ensure
			result_correct: Result = c_num_bytes (item)
		end

	set_num_bytes (a_value: INTEGER) 
			-- Change the value of member `num_bytes` to `a_value`.
		require
			exists: exists
		do
			set_c_num_bytes (item, a_value)
		ensure
			num_bytes_set: a_value = num_bytes
		end

	num_glyphs: INTEGER
			-- Access member `num_glyphs`
		require
			exists: exists
		do
			Result := c_num_glyphs (item)
		ensure
			result_correct: Result = c_num_glyphs (item)
		end

	set_num_glyphs (a_value: INTEGER) 
			-- Change the value of member `num_glyphs` to `a_value`.
		require
			exists: exists
		do
			set_c_num_glyphs (item, a_value)
		ensure
			num_glyphs_set: a_value = num_glyphs
		end

feature {NONE} -- Implementation wrapper for struct cairo_text_cluster_t

	sizeof_external: INTEGER 
		external
			"C inline use <eif_cairo.h>"
		alias
			"sizeof(cairo_text_cluster_t)"
		end

	c_num_bytes (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_text_cluster_t*)$an_item)->num_bytes
			]"
		end

	set_c_num_bytes (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_text_cluster_t*)$an_item)->num_bytes =  (int)$a_value
			]"
		ensure
			num_bytes_set: a_value = c_num_bytes (an_item)
		end

	c_num_glyphs (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_text_cluster_t*)$an_item)->num_glyphs
			]"
		end

	set_c_num_glyphs (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_text_cluster_t*)$an_item)->num_glyphs =  (int)$a_value
			]"
		ensure
			num_glyphs_set: a_value = c_num_glyphs (an_item)
		end

end
