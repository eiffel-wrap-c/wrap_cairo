note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class CAIRO_FONT_EXTENTS_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	ascent: REAL_64
			-- Access member `ascent`
		require
			exists: exists
		do
			Result := c_ascent (item)
		ensure
			result_correct: Result = c_ascent (item)
		end

	set_ascent (a_value: REAL_64) 
			-- Change the value of member `ascent` to `a_value`.
		require
			exists: exists
		do
			set_c_ascent (item, a_value)
		ensure
			ascent_set: a_value = ascent
		end

	descent: REAL_64
			-- Access member `descent`
		require
			exists: exists
		do
			Result := c_descent (item)
		ensure
			result_correct: Result = c_descent (item)
		end

	set_descent (a_value: REAL_64) 
			-- Change the value of member `descent` to `a_value`.
		require
			exists: exists
		do
			set_c_descent (item, a_value)
		ensure
			descent_set: a_value = descent
		end

	height: REAL_64
			-- Access member `height`
		require
			exists: exists
		do
			Result := c_height (item)
		ensure
			result_correct: Result = c_height (item)
		end

	set_height (a_value: REAL_64) 
			-- Change the value of member `height` to `a_value`.
		require
			exists: exists
		do
			set_c_height (item, a_value)
		ensure
			height_set: a_value = height
		end

	max_x_advance: REAL_64
			-- Access member `max_x_advance`
		require
			exists: exists
		do
			Result := c_max_x_advance (item)
		ensure
			result_correct: Result = c_max_x_advance (item)
		end

	set_max_x_advance (a_value: REAL_64) 
			-- Change the value of member `max_x_advance` to `a_value`.
		require
			exists: exists
		do
			set_c_max_x_advance (item, a_value)
		ensure
			max_x_advance_set: a_value = max_x_advance
		end

	max_y_advance: REAL_64
			-- Access member `max_y_advance`
		require
			exists: exists
		do
			Result := c_max_y_advance (item)
		ensure
			result_correct: Result = c_max_y_advance (item)
		end

	set_max_y_advance (a_value: REAL_64) 
			-- Change the value of member `max_y_advance` to `a_value`.
		require
			exists: exists
		do
			set_c_max_y_advance (item, a_value)
		ensure
			max_y_advance_set: a_value = max_y_advance
		end

feature {NONE} -- Implementation wrapper for struct cairo_font_extents_t

	sizeof_external: INTEGER 
		external
			"C inline use <eif_cairo.h>"
		alias
			"sizeof(cairo_font_extents_t)"
		end

	c_ascent (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->ascent
			]"
		end

	set_c_ascent (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->ascent =  (double)$a_value
			]"
		ensure
			ascent_set: a_value = c_ascent (an_item)
		end

	c_descent (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->descent
			]"
		end

	set_c_descent (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->descent =  (double)$a_value
			]"
		ensure
			descent_set: a_value = c_descent (an_item)
		end

	c_height (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->height
			]"
		end

	set_c_height (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->height =  (double)$a_value
			]"
		ensure
			height_set: a_value = c_height (an_item)
		end

	c_max_x_advance (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->max_x_advance
			]"
		end

	set_c_max_x_advance (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->max_x_advance =  (double)$a_value
			]"
		ensure
			max_x_advance_set: a_value = c_max_x_advance (an_item)
		end

	c_max_y_advance (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->max_y_advance
			]"
		end

	set_c_max_y_advance (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_cairo.h>"
		alias
			"[
				((cairo_font_extents_t*)$an_item)->max_y_advance =  (double)$a_value
			]"
		ensure
			max_y_advance_set: a_value = c_max_y_advance (an_item)
		end

end
